STMicroelectronics list file postprocessor v1.01   (C)2009-2024   Fri May 10 11:28:41 2024
Page 1  Assembler
                                               c:\users\simeo\qsync\university\computer architectures\lab5_exam\main_ex3.asm

   1                         stm8/     
   2                         
   0  000000                                 #include "mapping.inc"
   1                                                          ;-------------------------------
                                                                ;-----------------------
   2                                                          ; SEGMENT MAPPING FILE 
                                                                ;AUTOMATICALLY GENERATED BY 
                                                                ;STVD
   3                                                          ; SHOULD NOT BE MANUALLY 
                                                                ;MODIFIED.
   4                                                          ; CHANGES WILL BE LOST WHEN FILE
                                                                ; IS REGENERATED.
   5                                                          ;-------------------------------
                                                                ;-----------------------
   6  000000                                 #define  RAM0 1
   7  000000                                 #define  ram0_segment_start 0
   8  000000                                 #define  ram0_segment_end FF
   9  000000                                 #define  RAM1 1
  10  000000                                 #define  ram1_segment_start 100
  11  000000                                 #define  ram1_segment_end 5FF
  12  000000                                 #define  stack_segment_start 600
  13  000000                                 #define  stack_segment_end 7FF
<END_OF_INCLUSION>
   4                                   segment  'ram0'
   5  000000                       index     ds.w                   ; already cleared to 0 so no 
                                                                ;need for setup.
   6  000002                       sum       ds.b                   ; same here
   7  000003                       average_result  ds.b                   ; same here.
   8  000004                       remainder  ds.b     
   9                         
  10                                   segment  'rom'
  11  008080   F0020404            list      dc.b     $F0, $02, $04, $04
  12  008084   40F40000            list_signed  dc.b     $40, {-12}, 0, 0
  13  008088   0004                LIST_COUNT  DC.W     4
  14  00808A   04                  DIVISOR   DC.B     4
  15                         
  16                         main.l    
  17                                                          ; initialize SP
  18  00808B   AE07FF                        ldw      X,#stack_end
  19  00808E   94                            ldw      SP,X
  20                         
  21  00808F                                 #ifdef   1             
  22                                                          ; clear RAM0
  23  000000                       ram0_start.b  EQU      $0
  24  0000FF                       ram0_end.b  EQU      $FF
  25  00808F   AE0000                        ldw      X,#ram0_start
  26                         clear_ram0.l  
  27  008092   7F                            clr      (X)
  28  008093   5C                            incw     X
  29  008094   A300FF                        cpw      X,#ram0_end   
  30  008097   23F9                          jrule    clear_ram0
  31  008099                                 #endif   
  32                         
  33  008099                                 #ifdef   1
  34                                                          ; clear RAM1
  35  000100                       ram1_start.w  EQU      $100
  36  0005FF                       ram1_end.w  EQU      $5FF          
  37  008099   AE0100                        ldw      X,#ram1_start
STMicroelectronics list file postprocessor v1.01   (C)2009-2024   Fri May 10 11:28:41 2024
Page 2  Assembler
                                               c:\users\simeo\qsync\university\computer architectures\lab5_exam\main_ex3.asm

  38                         clear_ram1.l  
  39  00809C   7F                            clr      (X)
  40  00809D   5C                            incw     X
  41  00809E   A305FF                        cpw      X,#ram1_end   
  42  0080A1   23F9                          jrule    clear_ram1
  43  0080A3                                 #endif   
  44                         
  45                                                          ; clear stack
  46  000600                       stack_start.w  EQU      $600
  47  0007FF                       stack_end.w  EQU      $7FF
  48  0080A3   AE0600                        ldw      X,#stack_start
  49                         clear_stack.l  
  50  0080A6   7F                            clr      (X)
  51  0080A7   5C                            incw     X
  52  0080A8   A307FF                        cpw      X,#stack_end  
  53  0080AB   23F9                          jrule    clear_stack
  54                         
  55                         infinite_loop.l  
  56  0080AD   CD80E7                        call     calculate_average
  57  0080B0   CD80FA                        call     calculate_average_signed
  58                         calc_done  
  59  0080B3   20FE                          jra      calc_done
  60                         
  61                         calculate_sum  
  62                                                          ; fetching value
  63  0080B5   CE0000                        ldw      X, index
  64  0080B8   D68080                        ld       A, (list,X)
  65                                                          ; doing and storing addition
  66  0080BB   CB0002                        ADD      A, sum
  67  0080BE   C70002                        ld       sum, A
  68  0080C1   5C                            incw     X
  69  0080C2   CF0000                        ldw      index, X
  70  0080C5   C38088                        cpw      X, LIST_COUNT
  71  0080C8   2703                          jreq     sum_done
  72  0080CA   CC80B5                        jp       calculate_sum
  73                         sum_done  
  74  0080CD   81                            ret      
  75                                   
  76                         calculate_sum_signed             ;differnet list so other func 
                                                                ;required!
  77                                                          ; fetching value
  78  0080CE   CE0000                        ldw      X, index
  79  0080D1   D68084                        ld       A, (list_signed,X)
  80                                                          ; doing and storing addition
  81  0080D4   CB0002                        ADD      A, sum
  82  0080D7   C70002                        ld       sum, A
  83  0080DA   5C                            incw     X
  84  0080DB   CF0000                        ldw      index, X
  85  0080DE   C38088                        cpw      X, LIST_COUNT
  86  0080E1   2703                          jreq     sum_done_signed
  87  0080E3   CC80CE                        jp       calculate_sum_signed
  88                         sum_done_signed  
  89  0080E6   81                            ret      
  90                                   
  91                         calculate_average  
  92                                                          ; get sum
  93  0080E7   CD80B5                        call     calculate_sum
STMicroelectronics list file postprocessor v1.01   (C)2009-2024   Fri May 10 11:28:41 2024
Page 3  Assembler
                                               c:\users\simeo\qsync\university\computer architectures\lab5_exam\main_ex3.asm

  94                                                          ; do division
  95  0080EA   C60002                        ld       A, sum
  96  0080ED   97                            ld       XL, A
  97  0080EE   C6808A                        ld       A, DIVISOR
  98  0080F1   62                            div      X, A
  99  0080F2   C70004                        ld       remainder, A
 100  0080F5   9F                            ld       A, XL
 101  0080F6   C70003                        ld       average_result, A
 102  0080F9   81                            ret      
 103                         
 104                         calculate_average_signed  
 105  0080FA   AE0000                        ldw      X, #0
 106  0080FD   CF0000                        ldw      index, X      ; reset index
 107  008100   35000002                      MOV      sum, #0       ; reset sum.
 108  008104   CD80CE                        call     calculate_sum_signed
 109                                                          ; do division
 110  008107   C60002                        ld       A, sum
 111  00810A   47                            sra      A
 112  00810B   47                            sra      A
 113  00810C   C70003                        ld       average_result, A
 114  00810F   81                            ret      
 115                                   
 116  008110                                 interrupt NonHandledInterrupt
 117                         NonHandledInterrupt.l  
 118  008110   80                            iret     
 119                         
 120                         
 121                                   segment  'vectit'
 122  008000   8200808B                      dc.l     {$82000000+main}  ; reset
 123  008004   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; trap
 124  008008   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq0
 125  00800C   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq1
 126  008010   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq2
 127  008014   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq3
 128  008018   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq4
 129  00801C   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq5
 130  008020   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq6
 131  008024   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq7
 132  008028   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq8
 133  00802C   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq9
 134  008030   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq10
 135  008034   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq11
 136  008038   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq12
 137  00803C   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq13
 138  008040   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq14
 139  008044   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq15
 140  008048   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq16
 141  00804C   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq17
 142  008050   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq18
 143  008054   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq19
 144  008058   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq20
 145  00805C   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq21
 146  008060   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq22
 147  008064   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq23
 148  008068   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq24
 149  00806C   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq25
 150  008070   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq26
STMicroelectronics list file postprocessor v1.01   (C)2009-2024   Fri May 10 11:28:41 2024
Page 4  Assembler
                                               c:\users\simeo\qsync\university\computer architectures\lab5_exam\main_ex3.asm

 151  008074   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq27
 152  008078   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq28
 153  00807C   82008110                      dc.l     {$82000000+NonHandledInterrupt}  ; irq29
 154                         
 155  008080                                 end      
STMicroelectronics list file postprocessor v1.01   (C)2009-2024   Fri May 10 11:28:41 2024
Page 5  Assembler
                                               c:\users\simeo\qsync\university\computer architectures\lab5_exam\main_ex3.asm

Symbol Name                       Value     Call       Type  Scope      Rel.  Line  Privacy  Segment   Size  Bytes File

DIVISOR                               808A         no  WORD  Internal   ABS     14  private  textdata     1     1  -

LIST_COUNT                            8088         no  WORD  Internal   ABS     13  private  textdata     2     2  -

NonHandledInterrupt               00008110  interrupt  LONG  Internal   ABS    117  private  textdata     1     0  -

average_result                        0003         no  WORD  Internal   ABS      7  private  bss          1     1  -

clear_ram0                        00008092         no  LONG  Internal   ABS     26  private  textdata    10     0  -
clear_ram1                        0000809C         no  LONG  Internal   ABS     38  private  textdata    10     0  -
clear_stack                       000080A6         no  LONG  Internal   ABS     49  private  textdata     7     0  -
calc_done                             80B3         no  WORD  Internal   ABS     58  private  textdata     2     0  -
calculate_sum                         80B5         no  WORD  Internal   ABS     61  private  textdata    24     0  -
calculate_sum_signed                  80CE         no  WORD  Internal   ABS     76  private  textdata    24     0  -
calculate_average                     80E7         no  WORD  Internal   ABS     91  private  textdata    19     0  -
calculate_average_signed              80FA         no  WORD  Internal   ABS    104  private  textdata    22     0  -

index                                 0000         no  WORD  Internal   ABS      5  private  bss          2     2  -
infinite_loop                     000080AD         no  LONG  Internal   ABS     55  private  textdata     6     0  -

list                                  8080         no  WORD  Internal   ABS     11  private  textdata     4     1  -
list_signed                           8084         no  WORD  Internal   ABS     12  private  textdata     4     1  -

main                              0000808B         no  LONG  Internal   ABS     16  private  textdata     7     0  -

remainder                             0004         no  WORD  Internal   ABS      8  private  bss          1     1  -
ram0_start                              00         no  BYTE  Internal   ABS     23  private  textdata     0     0  -
ram0_end                                FF         no  BYTE  Internal   ABS     24  private  textdata     0     0  -
ram1_start                            0100         no  WORD  Internal   ABS     35  private  textdata     0     0  -
ram1_end                              05FF         no  WORD  Internal   ABS     36  private  textdata     0     0  -

sum                                   0002         no  WORD  Internal   ABS      6  private  bss          1     1  -
stack_start                           0600         no  WORD  Internal   ABS     46  private  textdata     0     0  -
stack_end                             07FF         no  WORD  Internal   ABS     47  private  textdata     0     0  -
sum_done                              80CD         no  WORD  Internal   ABS     73  private  textdata     1     0  -
sum_done_signed                       80E6         no  WORD  Internal   ABS     88  private  textdata     1     0  -


27 labels
No errors on assembly of 'c:\users\simeo\qsync\university\computer architectures\lab5_exam\main_ex3.asm'